# https://taskfile.dev

#Called by the vnbuild system to produce builds for my website
#https://www.vaughnnugent.com/resources/software

#This taskfile is called in this directory and is specific to the phc-winner-argon2 project
#that handles the MSBuild outside of the solution file

version: '3'

vars:
  PROJECT_NAME: '{{ .PROJECT_NAME | default "argon2" }}'
  MODULE_NAME: '{{ .MODULE_NAME | default "vnlib.core" }}'
  BUILD_DIR: 'build/{{ OS }}'
  BUILD_TYPE: '{{ .BUILD_TYPE | default "Release" }}'
  BINARY_DIR: '{{ .BINARY_DIR | default "bin" }}'

tasks:

  default:
    desc: "Builds the entire project from source code without using the VNBuild build system for target machines"
    cmds:
      #build with defaults
      - task: build
      - cmd: echo "Your {{ .PROJECT_NAME }} dll file can be found in '{{ .USER_WORKING_DIR }}/{{ .BUILD_DIR }}'"
        silent: true
  
  build:
    cmds:
     - cmd: echo Building {{ .PROJECT_NAME }} in {{ .BUILD_TYPE }} mode
       silent: true

     - cmake {{ .CLI_ARGS }}
       -B./{{ .BUILD_DIR }} 
       -DCMAKE_BUILD_TYPE={{ .BUILD_TYPE }}       

     #compile     
     - cmd: cmake --build {{ .BUILD_DIR }}/ --config Debug
     - cmd: cmake --build {{ .BUILD_DIR }}/ --config Release 

 
  postbuild_success:
    cmds:
      #make bin dir
    - cmd: powershell mkdir -Force '{{ .BINARY_DIR }}'
      ignore_error: true
    
    - task: parallel_postbuild
  
  parallel_postbuild:
    internal: true
    vars:
      #required files to include in tar
      BIN_FILES: 
        license.txt 
        readme.txt 
        argon2.h 
        argon2.dll

    deps:
     - task: pack_source
  
     - task: pack_artifacts
       vars: { BUILD_MODE: 'debug', TAR_FILES: '{{ .BIN_FILES }} argon2.pdb' }  
     - task: pack_artifacts
       vars: { BUILD_MODE: 'release', TAR_FILES: '{{ .BIN_FILES }}' }

  #packs up the binary artifacts for distribution
  pack_artifacts:
    internal: true
    vars:
      OUT_DIR: '{{ .USER_WORKING_DIR }}/{{ .BINARY_DIR }}'
    deps:
      - task: embed
        vars: { TARGET: './{{ .BUILD_DIR }}/{{ .BUILD_MODE }}' }
    cmds:
      - cmd: cd {{ .BUILD_DIR }}/{{ .BUILD_MODE }} && tar -czf '{{ .OUT_DIR }}/msvc-x64-{{ .BUILD_MODE }}-{{ .PROJECT_NAME }}.tgz' {{ .TAR_FILES }}

  #add embeded resources to the binary output for distribution
  embed:
    internal: true
    cmds:
     - powershell cp LICENSE '{{.TARGET}}/license.txt'
     - powershell cp build.readme.txt '{{.TARGET}}/readme.txt'
     - powershell cp include/argon2.h '{{.TARGET}}/argon2.h'
  
  #packages source code for distribution
  pack_source:
    internal: true
    vars:
      EXCLUDES:
        
      INCLUDES:
        src/*
        include/*
        CHANGELOG.md
        CMakeLists.txt
        README.md
        LICENSE
        Argon2.sln
        libargon2.pc.in
        Makefile
        Taskfile.yaml

    cmds:
     #just pack up current directory, excluding build, bin, and git directories
     - tar {{ .EXCLUDES }} -czf '{{ .BINARY_DIR }}/src.tgz' {{ .INCLUDES }}

  dev-init:
    desc: 'Configures the project for local development'
    cmds:
     - task: build
       vars: { BUILD_TYPE: Debug }

     - cmd: echo "dev init complete"
       silent: true

  clean:
    ignore_error: true
    cmds:
     - for: [ bin/, build/ ]
       cmd: '{{ if eq OS "windows" }}powershell rm -Recurse -Force{{else}}rm -rf{{end}} "{{ .ITEM }}"'
